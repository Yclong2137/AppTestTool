apply plugin: 'groovy'
apply plugin: 'maven-publish'

buildscript {
    dependencies {
        classpath files("${System.getenv("JAVA_HOME")}/jre/lib/rt.jar")
    }
}

repositories {
    mavenCentral()
    google()

}

sourceSets {
    main {
        groovy {
            srcDir 'src/main/groovy'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

//maven私服账户名
def nexusUserName
//maven私服密码
def nexusPassword
Properties properties = new Properties()
try {
    properties.load(new File(rootDir, "local.properties").newDataInputStream())
    nexusUserName = properties.getProperty("NEXUS_USERNAME")
    nexusPassword = properties.getProperty("NEXUS_PASSWORD")
} catch (Exception e) {
    e.printStackTrace()
}


//发布前先执行 clean, 避免发布的aar中使用了旧的缓存代码
publish.dependsOn clean

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_COMMON_NAME

                from components.java
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "Qisi"
                url = VERSION_COMMON_NAME.endsWith("SNAPSHOT") ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL

                credentials {
                    username nexusUserName
                    password nexusPassword
                }
            }

        }
    }
}


dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:4.1.3'
    implementation 'org.ow2.asm:asm:9.2'
    compileOnly files("${System.getenv("JAVA_HOME")}/jre/lib/rt.jar")
}


