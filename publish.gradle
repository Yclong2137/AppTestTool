apply plugin: 'maven-publish'


//maven私服账户名
def nexusUserName
//maven私服密码
def nexusPassword
Properties properties = new Properties()
try {
    properties.load(new File(rootDir, "local.properties").newDataInputStream())
    nexusUserName = properties.getProperty("NEXUS_USERNAME")
    nexusPassword = properties.getProperty("NEXUS_PASSWORD")
} catch (Exception e) {
    e.printStackTrace()
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// 打包javadocJar任务
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


//发布前先执行 clean, 避免发布的aar中使用了旧的缓存代码
publish.dependsOn clean

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_COMMON_NAME

                from components.java
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "Qisi"
                url = VERSION_COMMON_NAME.endsWith("SNAPSHOT") ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL

                credentials {
                    username nexusUserName
                    password nexusPassword
                }
            }

        }
    }
}